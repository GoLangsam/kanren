package kanren

import "strconv"
import "github.com/GoLangsam/sexpr"

// V represents a logic variable
type V *Variable

// pool represents the variables seen so far
type pool struct {
	seen map[string]V
}

func newPool() pool {
	return pool{
		seen: make(map[string]V),
	}
}

/*
func (v V) String() string {
	return "<lvar " + v.Name + strconv.Itoa(int(v.index)) + ">"
}
*/

// V returns a fresh variable (with an autogenerated name)
func (s *S) V() V {
	return s.Fresh("<lVar " + strconv.Itoa(len(s.pool.seen)) + ">")
}

// Fresh updates S and returns a fresh variable
func (s *S) Fresh(name string) V {

	_, known := s.pool.seen[name]
	if known {
		panic("Fresh detects duplicate name for variable")
	}

	x := sexpr.NewVariable(name)
	v := x.Atom.Var
	s.pool.seen[name] = v

	return v
}
